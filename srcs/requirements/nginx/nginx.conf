# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    nginx.conf                                         :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jsaintho <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/03/05 12:18:44 by jsaintho          #+#    #+#              #
#    Updated: 2025/03/05 12:18:47 by jsaintho         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #
#This is an Nginx server block configuration that sets up a 
# secure HTTPS connection for the domain www.js.net and js.net

# listen 443 ssl :  
#       - tells Nginx to listen for incoming HTTPS requests on port 443
#       - ssl indicates SSL/TLS (Secure Sockets Layer / Transport Layer Security) encryption will be used for the connection.
#
# listen [::]:443 ssl :
#       - allows server to listen HTTPS traffic on IPv6 and IPv4. [::] is the IPv6 equivalent of 0.0.0.0 (listening on all interfaces).
#
# index index.php :
#       - defines the default index file for the server. 
#       - if user requests a directory (e.g., https://js.net/dir), Nginx will look for index.php as default file to serve.
#
# location ~ [^/]\.php(/|$) :
#       - this location block is used to handle PHP file requests.
#       - the ~ symbol indicates that this is a regular expression match.
#       - the regular expression [ ^/ ]\.php(/|$) matches URLs ending in .php but not with trailing slash (e.g., /index.php, but not /index.php/).
#       - This block will process all requests for PHP files, such as https://js.net/index.php.
#
# try_files $uri =404 :
#       - this directive checks if requested file exists.
#       - if file does not exist, it returns 404 Not Found error.
#       - this helps prevent serving files that doesnâ€™t exist and makes sure the server only processes valid file requests.
#
# fastcgi_pass wordpress:9000 :
#       - tells Nginx to pass the PHP requests to a FastCGI server (in this case, server at wordpress:9000).
#       - wordpress:9000 refers to service named wordpress running on port 9000, commonly used for PHP-FPM (FastCGI Process Manager) to handle PHP processing.
#       - typical in a containerized environment like Docker, where wordpress service is running separately and can process PHP requests.
#
# include fastcgi_params :
#       - this directive includes standard set of FastCGI parameters that Nginx passes to the PHP-FPM server.
#       - the fastcgi_params file contains list of essential variables, QUERY_STRING, REQUEST_METHOD, CONTENT_TYPE, CONTENT_LENGTH, and others.
#
# fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name :
#       - sets the SCRIPT_FILENAME FastCGI parameter, which tells PHP-FPM the absolute path to the PHP script being requested.
#       - $document_root is the root directory (/var/www/html in this case), and $fastcgi_script_name is path of PHP script being requested (e.g., /index.php).
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name www.js.net js.net;

    ssl_certificate here_certs;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    ssl_protocols TLSv1.3;

    index index.php;
    root /var/www/html;

    location ~ [^/]\.php(/|$) { 
            try_files $uri =404;
            fastcgi_pass wordpress:9000;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
}